TMT Order Module
Implemented digioVerification using a third-party GSTIN API (Backend and Frontend).
Integrated external API to fetch sub-dealer addresses via pincode.
Developed the Plant Update API for backend and frontend.
Designed and implemented the SKU details submission page with a 10% deviation logic and validation.
Managed plant selection functionality post-SKU submission, including UI and backend updates.
Enhanced the setLoadingProgram API with new functionalities.
Created validateInputs for custom validations, handling various input types (order_common_v2.js).
Resolved bugs and addressed CRs following internal demos.
Implemented changes post-demos on key dates, including 31/07/2024.
Updated "Edit Order" (requisition) page with provision to edit "Planned Amount" until the order is in Pending status.
Enhanced loading_program_history view page post-refactoring, including backend (getLoadingProgramHistory) updates and popup fixes.
Added constants to DA Creation page based on requirements and updated frontend and backend APIs.
Adjusted credit analysis page formats (Credit Amount: 2 decimals, Quantity: 3 decimals).
Removed LP Status filter in "Order History" page search.
Adjusted button alignment and order status filters in ho-approval-page.
Highlighted quantity values in the order history input box using CSS.
Updated column names and search fields in the order list page.
Disabled search options in the "Edit Order" page after HO1 approval.
Sturdflex Web & Mobile Module
Developed getSturdflexProducts() API to display Sturdflex products (Backend and Frontend).
Created getSturdflexProductVariants() API to show product variants (Backend, Web API).
Built addSturdflexProducts() to allow users to add new Sturdflex products (Backend and Frontend).
Developed addSturdflexProductVariants() to add product variants, including API verification.
Created mobile APIs for Sturdflex product and variant requests.
Implemented storePricingRequest and createRequest() APIs for streamlined product requests.
Mason Sarthi App
Developed Mason Social Post API with Swagger documentation and migrations.
Created Mason Social Post Reaction API with full documentation and migrations.
Developed Meet Details API and Campaign Feedback API, adding constants.
Built Gift Received Acknowledgment API with documentation and migrations.
Developed APIs for Mason KYC Status and Lifting Details with documentation and migrations.
Implemented SF Lifting API and Mason login logs.
Created endpoints for profile updates, and geographical data (State, District, Blocks).
Added GetActiveMasons API with Swagger documentation.
EasyDMS
Developed fetchSecondarySalesData API for data visualization in the frontend.
Other Contributions
Implemented fetchPointLedger() for viewing Mason ledger points, linked with the Sarthi app (Backend, Frontend, Migration).
Created Engineer Lifting Email Trigger for monthly submissions, assisting with data preparation and sending automated emails to stakeholders
