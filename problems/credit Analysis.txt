 Work I have Done in TMT Order Module :
======================================
1. Implementated digioVerification by GSTIN third party api (Backend and Frontend) 
2. Implement external api to fetch address of subdealer using pincode 
3. Plant Update API implementation backend and frontend i
3. worked on Loading Program Sku details submission page with 10% deviatio logic and validation 
4. worked on plant select part after Sku details submission to update plant UI+backend
5. Worked in modifiaction in setLoadingProgram Api  
6. Implement validateInputs function which is custom validation 
   for number,charactor,alphanumeric,positiveNumbers,allow all in order_common_v2.js file.
7. Resolve bugs and CR whenever internal demo happen 2-3 times in module
8. Web| Order Module| Changes post demo on 31/07/2024 
9. Order module : Observations during Internal demo (19/04/2024)  
Recent Work in Order Module: 
-------------------------------------------
1. New CR Add provision to "edit Planned Amount" in "Edit Order(requisition) page" until Order is Pending stage  | Planned Amount Absolute value
2. worked in loading_program_history view page:work in both frontend and backend(getLoadingProgramHistory) after refactoring new database changes data values and fixed pupop issue in same page
3. Added constant given by rahul in constant file and accroding changes DA Creation page api frontend and backend.
4.Modify function to generate order-code CR after demo
5 "In credit Analysis page" : Credit Amount will be 2 digit amd quantity should be 3 digit after decimal place throught the credit-analyis page(frontend),modify query --Done 
6. Remove Lp Status in Search bar from "Order-history-page"  
7 Button Aligment in ho-approval-page and search filter order status fixation
8 In Order-history page quantity value in input box will be highlighted added CSS 
9 worked on order lsit page renaming columns and search 
10. Disabled all Search button in Edit order page after HO1 approved the order
ho-loading-programme-details-sku

Sturflex Web & MobModule:
==========================
1. Worked on  getSturdflexProducts() in both backend and frontend to view Sturdfelx Products in Web
2. Implemented getSturdflexProductsVariants () in backend and show variants of each product in Web  (---PricingRequestController  (ho_product_list_blade,ho_product_list.js)  Web Api )
3. Wrote addSturdflexProducts() in backend and implement in frontend so that user can add sturdflex products
4. wrote addSturdflexProductVariants() Api in and implement it in frontend to view in web  : addSturdflexProductsVariants Api (verify)
5. Wrote mobile api for getSturdflexPricingRequestList
6. wrote mobile api for getSturdflexProductVariantById
7. wrote mobile api updatePricingRequestVariantInfo (verify)
8.storePricingRequestApi
9.getSturdflexProductVariantById(by me)
10.createRequest()
11., getPricingRequestVariantDetails(???)


Mason Sarthi App:
===============
1. Create Mason Social Post Api   with Swagger Documentaion and migrations refrence MasonSocialPostControlller
2. Get Mason Social Post Response API  with Swagger Documentaion and migrations refrence MasonSocialPostController 
3. Create Mason Social Post Reaction API  with Swagger Documentaion and migrations refrence MasonSocialPostControoler
4. Get Meet Details API  with Swagger Documentaion
5. Create Campaigns feedbacks API  with Swagger Documentaion,migrations and add Constants(in campaign_constants.php) refrence MeetControllers
6. Create Gift Recived AcknowledgeMent API with Swagger Documentation and Migration refrence  MeetControllers
7. Get Mason Kyc Status Updates API with Swagger Documentation and migrations regrence refrence MeetControllers
6. Get Mason Lifting Details API with Swagger Documentation and migrations refrence MasonLiftingControllers
7. Create SF Lifting API with Swagger Documentation and migrations refrence MasonLiftingControllers
8. Mason LogIn Logs APi with Swagger Documentation refrence MasonControllers
9. Update Mason Profile Details API with Swagger Documentation refrence MasonControllers
10.Get State ,District,Blocks Api  with Swagger Documentaion and migrations refrence AreaController
11.GetActiveMasons API with Swagger docuentation
  
EasyDms
=======
Wrote fetchSecondarySalesData Api  backend and implement it in frontend to view.
others:
======
11. Implement fetchPointLedger() to view  mason ledger points in web  coming from sarthi app both backend and fronted,migration with Argha 
    refer MasonLiftingRequest Approval Controller
12. EnginnerLifting Email trigger prepare make data set and  engineer_lifting_monthly_submission work on only few part

